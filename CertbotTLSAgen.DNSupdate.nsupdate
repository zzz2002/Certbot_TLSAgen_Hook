#!/bin/bash
# -*- mode: sh; -*-
# CerbotTlsagen.DNSupdate.nsupdate is part of the CertbotTLSAgen package. Designed to run nsupdate
# Copyright (c) 2017, 2018 John L. Allen

# This program is free software: you can redistribute it and/or modify it under the terms of the 
# GNU General Public License as published by the Free Software Foundation, either version 3 of 
# the License, or (at your option) any later version.

# This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; 
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
# See the GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# If you wish to contact me please email me at zzz2002@gmail.com

#----------------------------------------------------------------------------------------------------
#
# Last modified:
#	2018-09-25 08:45 remove debugging commands
#
#----------------------------------------------------------------------------------------------------

if [[ "${SHELL##*/}" != bash || "${BASH_VERSINFO[0]:0:1}" -lt 4 ]]; then
    echo "error: script must run in bash version 4.0 or later"
    false
    exit
fi
shopt -s extglob

#	Certbot TLSAgen DNS update function for ISC Bind (9) uses nsupdate
#	   there are four input paramaeters for this script:
#		1 the action to be performed - add or delete
#		2 the file containing the records to be added to or deleted from the DNS zone
#		3 **NOT used in this  unit** the delay between running the TLSA generator 
#		  and removing old tlsa records. Usually their TTL or a multiple thereof
#		4 logfile to be used
#
exec >>"$4" 2>&1					# redirect stdout & stderr to the logfile

iR=0							# initialize the input count
oR=0							# initialize the output count
fR=0							# initialize the fail count

if [[ -s "$2" ]]; then 						# check to see if the input file contains any records, if yes proceed else exit.
	while read -r tlsaRecord; do
		(( iR += 1 ))
		printf -- 'server 127.0.0.1\n%s  %s\nsend\nquit\n' "${1,,}" "$tlsaRecord" | nsupdate -v -k /var/run/named/session.key
		if [[ $? -ne 0 ]]; then
			printf -- '%s %s - *** ERROR *** \"%s\" from \"%s\" failed\n' "$(date "+%Y-%m-%d %H:%M:%S.%6N")" "${0##*/}" "$1" "$2" 
			(( fR += 1 ))
		else
			(( oR += 1 ))
		fi
	done < "$2"

	printf -- '%s %s - *** \"%s\" - %d records from \"%s\" using nsupdate. output %d failed %d \n' "$(date "+%Y-%m-%d %H:%M:%S.%6N")" "${0##*/}" "$1" "$iR" "$2" "$oR" "$fR"
fi

exit
